set shell       := ["bash", "-c"]
set dotenv-load := true
export APP_FQDN := env_var_or_default("APP_FQDN", "app1.dev")
bold            := '\033[1m'
normal          := '\033[0m'

@_help:
    just --list

# all one-off tasks to get started. idempotent
@init: mkcert

# DEV: generate TLS certs for HTTPS over localhost https://blog.filippo.io/mkcert-valid-https-certificates-for-localhost/
mkcert ignorechecks="":
    #!/usr/bin/env bash
    echo -e "ðŸšª Check local mkcert certificates and /etc/hosts with APP_FQDN=${APP_FQDN}"
    if [ -n "$CI" ]; then
        echo "CI=$CI âˆ´ skipping mkcert"
        exit 0
    fi
    if [ -f /.dockerenv ]; then \
        echo "Inside docker context, assuming mkcert has been run on the host"
        exit 0;
    fi
    if ! command -v mkcert &> /dev/null; then echo "ðŸ’¥ {{bold}}mkcert{{normal}}ðŸ’¥ is not installed (manual.md#host-requirements): https://github.com/FiloSottile/mkcert"; exit 1; fi
    if [ ! -f conf.d/certs/{{APP_FQDN}}-key.pem ]; then
        mkdir -p conf.d/certs ;
        cd conf.d/certs && mkcert -cert-file {{APP_FQDN}}.pem -key-file {{APP_FQDN}}-key.pem {{APP_FQDN}} ;
    fi
    if [ "{{ignorechecks}}" = "" ]; then
        if ! cat /etc/hosts | grep "{{APP_FQDN}}" &> /dev/null; then
            echo -e "";
            echo -e "ðŸ’¥Add to /etc/hosts:ðŸ’¥";
            echo -e "";
            echo -e "      {{bold}}127.0.0.1    {{APP_FQDN}}{{normal}}";
            echo -e "";
            exit 1;
        fi
    fi

@clean:
    echo "rm -rf ingress/https/conf.d/certs/*"
    rm -rf conf.d/certs/*
